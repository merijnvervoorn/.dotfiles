function webcam() {
    sudo modprobe -r v4l2loopback
    sudo modprobe v4l2loopback exclusive_caps=1 devices=2 card_label="OBS","Iriun Webcam"
}

function extract() {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
 else
    for n in $@
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar) 
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

function deepseek() {
    ollama run deepseek-r1:8b
}

function anythingllm() {
    bash AnythingLLMDesktop/start
}

function freq() {
    history | awk '{print $2}' | sort | uniq -c | sort -nr | head -10
}

## git extra features 
function lazygit() {
	git pull
	git add .
	git commit -m "$1"
	git push
}

function gitpuller() {
    local base_dir="${1:-$HOME}"
    local errors_file="/tmp/git_pull_errors_$$.log"
    local pulled_count=0
    local failed_count=0

    echo "🔍 Scanning for Git repositories in: $base_dir"
    echo > "$errors_file"  # Clear error log

    find "$base_dir" -type d -name ".git" \
        ! -path "*/.cargo/*" \
        ! -path "*/Trash/*" \
        ! -path "*/snap/*" \
        2>/dev/null | while read -r gitdir; do
            repo_dir="$(dirname "$gitdir")"
            echo -e "\n📁 Pulling in: $repo_dir"

            if output=$(cd "$repo_dir" && git pull 2>&1); then
                pulled_count=$((pulled_count + 1))
                echo "$output"
            else
                failed_count=$((failed_count + 1))
                echo "❌ Failed to pull $repo_dir" >> "$errors_file"
                echo "$output" >> "$errors_file"
                echo "❌ Pull failed. Logged error."
            fi
    done

    echo -e "\n✅ Done! Repos pulled: $pulled_count"
    if [[ $failed_count -gt 0 ]]; then
        echo "❌ Repos with errors: $failed_count"
        echo "📄 See details in: $errors_file"
    fi
}

# - clone + cd 
function git() {
    if [ "$1" = "cd" ]; then
        shift
        # Check if the input starts with 'merijn:'
        if [[ "$1" == merijn:* ]]; then
            repo_name="${1#merijn:}"  # Remove 'merijn:' prefix
        else
            repo_name="$(basename "$1" .git)"  # Extract repo name from URL
        fi
        command git clone "$1" && cd "$repo_name" || return
    else
        command git "$@"
    fi
}


unalias open 2>/dev/null
unset -f open 2>/dev/null

function open() {
    if [ -z "$1" ]; then
        (nohup nautilus . >/dev/null 2>&1 &) 
    else
        (nohup xdg-open "$1" >/dev/null 2>&1 &)
    fi
}


